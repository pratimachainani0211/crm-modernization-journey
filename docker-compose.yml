services:
  # Using Solution 1 (single multi-stage Dockerfile)
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
#    depends_on:
#      redis:
#        condition: service_started
#      zipkin:
#        condition: service_started

  customer-service:
    build:
      context: .
      dockerfile: customer-service/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
#    depends_on:
#      redis:
#        condition: service_started
#      zipkin:
#        condition: service_started

  order-service:
    build:
      context: .
      dockerfile: order-service/Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
#      redis:
#        condition: service_started
#      zipkin:
#        condition: service_started
      customer-service:
        condition: service_started

  # Infrastructure services
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

#  zipkin:
#    image: openzipkin/zipkin:latest
#    ports:
#      - "9411:9411"
#
#  prometheus:
#    image: prom/prometheus:latest
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
#
#  grafana:
#    image: grafana/grafana:latest
#    ports:
#      - "3000:3000"
#    environment:
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#    volumes:
#      - ./monitoring/datasources:/etc/grafana/provisioning/datasources
#      - ./monitoring/dashboards:/etc/grafana/provisioning/dashboards